{
  "hash": "05227faa1d748c81e2d18154814658c8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise 1\"\nformat: html\neditor: source\neditor_options: \n  chunk_output_type: console\n---\n\n![](../assets/images/spe.png)\n\n## `SpatialExperiment` object\n\nIn this first exercise, we will dive into the `SpatialExperiment` object, a cornerstone of spatial transcriptomics analysis in `R`. We will learn how to load Visium HD data, explore the different components of the object, and perform basic manipulations. By the end of this session, you will have a solid understanding of how to handle spatial transcriptomics data within the `R`/`Bioconductor` ecosystem.\n\n## Learning Objectives\n\nBy the end of this exercise, you will be able to:\n\n- Understand the structure of a `SpatialExperiment` object.\n- Access and interpret `spatialCoords` and `imgData`.\n- Perform basic subsetting operations on `SpatialExperiment` objects.\n- Combine multiple `SpatialExperiment` objects.\n- Apply image transformations (rotation, mirroring) to spatial data.\n\n\n# Libraries \n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary R libraries for spatial transcriptomics data analysis.\nlibrary(DropletUtils)\nlibrary(BumpyMatrix)\nlibrary(SpatialExperiment)\nlibrary(VisiumIO)\nlibrary(arrow)\nlibrary(qs2)\n```\n:::\n\n\n# Data for the course\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!dir.exists(\"data/p1_crc/binned_outputs/square_008um/\")) {\n  dir.create(\"data\")\n  download.file(\n    url = \"https://cf.10xgenomics.com/samples/spatial-exp/3.0.0/Visium_HD_Human_Colon_Cancer_P1/Visium_HD_Human_Colon_Cancer_P1_binned_outputs.tar.gz\",\n    destfile = \"data/Visium_HD_Human_Colon_Cancer_P1_binned_outputs.tar.gz\"\n  )\n\n  untar(\n    tarfile = \"data/Visium_HD_Human_Colon_Cancer_P1_binned_outputs.tar.gz\",\n    files = c(\n      \"binned_outputs/square_008um/filtered_feature_bc_matrix\",\n      \"binned_outputs/square_008um/filtered_feature_bc_matrix.h5\",\n      \"binned_outputs/square_002um/spatial\",\n      \"binned_outputs/square_008um/spatial\"\n    ),\n    exdir = \"data/p1_crc\"\n  )\n\n  file.remove(\"data/Visium_HD_Human_Colon_Cancer_P1_binned_outputs.tar.gz\")\n} else {\n  message(\"Data exists, please proceed to next steps!\")\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nData exists, please proceed to next steps!\n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import Visium HD data from Space Ranger output into a SpatialExperiment object.\nspe <- TENxVisiumHD(\n  spacerangerOut = \"data/p1_crc/\",\n  processing = \"filtered\",\n  format = \"h5\",\n  images = \"lowres\",\n  bin_size = \"008\"\n) |>\n  import()\nspe\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass: SpatialExperiment \ndim: 18085 507684 \nmetadata(2): resources spatialList\nassays(1): counts\nrownames(18085): ENSG00000187634 ENSG00000188976 ... ENSG00000198695\n  ENSG00000198727\nrowData names(3): ID Symbol Type\ncolnames(507684): s_008um_00301_00321-1 s_008um_00602_00290-1 ...\n  s_008um_00353_00477-1 s_008um_00595_00611-1\ncolData names(6): barcode in_tissue ... bin_size sample_id\nreducedDimNames(0):\nmainExpName: Gene Expression\naltExpNames(0):\nspatialCoords names(2) : pxl_col_in_fullres pxl_row_in_fullres\nimgData names(4): sample_id image_id data scaleFactor\n```\n\n\n:::\n:::\n\n\n\n# Exploring the object\n\n## `spatialCoords`\n\n::: {.cell}\n\n```{.r .cell-code}\n# Display the head of the spatial coordinates, which represent the (x, y) locations of each spot.\nhead(spatialCoords(spe))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      pxl_col_in_fullres pxl_row_in_fullres\ns_008um_00301_00321-1           9217.893           27883.12\ns_008um_00602_00290-1           8394.152           19079.20\ns_008um_00425_00829-1          24094.123           24396.58\ns_008um_00526_00291-1           8402.675           21300.29\ns_008um_00681_00396-1          11512.628           16799.19\ns_008um_00078_00444-1          12750.753           34432.55\n```\n\n\n:::\n\n```{.r .cell-code}\n# List the names of the spatial coordinate columns.\nspatialCoordsNames(spe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"pxl_col_in_fullres\" \"pxl_row_in_fullres\"\n```\n\n\n:::\n:::\n\n\n## `imgData`\n\n::: {.cell}\n\n```{.r .cell-code}\n# Display the image data associated with the SpatialExperiment object.\nimgData(spe)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDataFrame with 1 row and 4 columns\n    sample_id    image_id   data scaleFactor\n  <character> <character> <list>   <numeric>\n1    sample01      lowres   ####  0.00843811\n```\n\n\n:::\n:::\n\n\n### `SpatialImage` class\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract the SpatialImage object from the SpatialExperiment object.\nspi <- getImg(spe)\nspi\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n600 x 496 (width x height) StoredSpatialImage\nimgSource():\n  /Users/detanw/Desktop/seq-spatial-transcriptomics-training/data/p1_crc/binned_ou\n  tputs/square_008um/spatial/tissue_lowres_image.png \n```\n\n\n:::\n\n```{.r .cell-code}\n# Plot the raster image from the SpatialImage object.\nplot(imgRaster(spe))\n```\n\n::: {.cell-output-display}\n![](day1-1_SpatialExperiment_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Question 1\n\n**How would you extract the image data for a specific sample and image ID, for example, 'sample01' and 'lowres'?**\n\n:::{.callout-tip collapse=\"true\"}\n### Answer\n\n```r\n# Extract the image data for 'sample01' and 'lowres' image ID.\ngetImg(spe, sample_id = \"sample01\", image_id = \"lowres\")\n```\n:::\n\n# Operations on `SpatialExperiment`\n\n## subset by `sample_id`\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subset the SpatialExperiment object to include only observations from 'sample01'.\nsub <- spe[, spe$sample_id == \"sample01\"]\n```\n:::\n\n\n## Question 2\n\n**How would you subset the `SpatialExperiment` object to only include spots where the `in_tissue` column in `colData` is `TRUE`?**\n\n:::{.callout-tip collapse=\"true\"}\n### Answer\n\n```r\n# Subset the SpatialExperiment object to retain only spots that are within the tissue area.\nspe_in_tissue <- spe[, colData(spe)$in_tissue]\n# Verify the number of spots after subsetting.\nsum(colData(spe)$in_tissue) == ncol(spe_in_tissue)\n```\n:::\n\n## retain only observations that map to tissue\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subset the SpatialExperiment object to retain only spots that are within the tissue area.\nsub <- spe[, colData(spe)$in_tissue]\n# Verify that the number of columns in the subsetted object matches the count of 'in_tissue' spots.\nsum(colData(spe)$in_tissue) == ncol(sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## Combining samples\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create two copies of the SpatialExperiment object.\nspe1 <- spe2 <- spe\n# Combine the two SpatialExperiment objects column-wise (samples).\nspe3 <- cbind(spe1, spe2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n'sample_id's are duplicated across 'SpatialExperiment' objects to cbind; appending sample indices.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Display the unique sample IDs in the combined object.\nunique(spe3$sample_id)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sample01.1\" \"sample01.2\"\n```\n\n\n:::\n:::\n\n\n## Question 3\n\n**Imagine you have three `SpatialExperiment` objects (`spe1`, `spe2`, `spe3`). How would you combine all three into a single object?**\n\n:::{.callout-tip collapse=\"true\"}\n### Answer\n\n```r\n# Create three SpatialExperiment objects (for demonstration).\nspe1_q3 <- spe2_q3 <- spe3_q3 <- spe\n# Combine all three SpatialExperiment objects.\nspe_combined_q3 <- cbind(spe1_q3, spe2_q3, spe3_q3)\n# Display unique sample IDs in the combined object.\nunique(spe_combined_q3$sample_id)\n```\n:::\n\n## Image transformation\n\n### Rotation\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract the first image from the SpatialExperiment object.\nspi <- getImg(spe)\n# Apply counter-clockwise (-90 degrees) and clockwise (+90 degrees) rotations to the image.\nspi1 <- rotateImg(spi, -90)\nspi2 <- rotateImg(spi, +90)\n# Visualize the original and rotated images for comparison.\npar(mfrow = c(1, 3))\nplot(as.raster(spi))\nplot(as.raster(spi1))\nplot(as.raster(spi2))\n```\n\n::: {.cell-output-display}\n![](day1-1_SpatialExperiment_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specify the sample and image identifiers for targeted rotation.\nsid <- \"sample01\"\niid <- \"lowres\"\n# Apply a counter-clockwise rotation of -90 degrees to the specified image within the SpatialExperiment object.\ntmp <- rotateImg(spe,\n  sample_id = sid,\n  image_id = iid,\n  degrees = -90\n)\n# Visualize the original and rotated images for the specified sample and image ID.\npar(mfrow = c(1, 2))\nplot(imgRaster(spe, sid, iid))\nplot(imgRaster(tmp, sid, iid))\n```\n\n::: {.cell-output-display}\n![](day1-1_SpatialExperiment_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### Mirroring\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract the first image from the SpatialExperiment object.\nspi <- getImg(spe)\n# Mirror the image horizontally (\"h\") and vertically (\"v\").\nspi1 <- mirrorImg(spi, \"h\")\nspi2 <- mirrorImg(spi, \"v\")\n# Visualize the original and mirrored images for comparison.\npar(mfrow = c(1, 3))\nplot(as.raster(spi))\nplot(as.raster(spi1))\nplot(as.raster(spi2))\n```\n\n::: {.cell-output-display}\n![](day1-1_SpatialExperiment_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specify the sample and image identifiers for targeted mirroring.\nsid <- \"sample01\"\niid <- \"lowres\"\n# Mirror the specified image horizontally within the SpatialExperiment object.\ntmp <- mirrorImg(spe,\n  sample_id = sid,\n  image_id = iid,\n  axis = \"h\"\n)\nplot(imgRaster(tmp, sid, iid))\n```\n\n::: {.cell-output-display}\n![](day1-1_SpatialExperiment_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Question 4\n\n**How would you first rotate an image by 90 degrees clockwise and then mirror it horizontally?**\n\n:::{.callout-tip collapse=\"true\"}\n### Answer\n\n```r\n# Extract the first image.\nspi_q4 <- getImg(spe)\n# First, rotate the image by 90 degrees clockwise.\nrotated_spi_q4 <- rotateImg(spi_q4, degrees = 90)\n# Then, mirror the rotated image horizontally.\nfinal_transformed_spi_q4 <- mirrorImg(rotated_spi_q4, axis = \"h\")\n# Visualize the original, rotated, and final transformed images.\npar(mfrow = c(1, 3))\nplot(as.raster(spi_q4))\nplot(as.raster(rotated_spi_q4))\nplot(as.raster(final_transformed_spi_q4))\n```\n:::\n\n\n# Save the object\n\n::: {.cell}\n\n```{.r .cell-code}\nqs_save(spe, file = \"results/01_spe.qs2\")\n```\n:::\n\n\n:::{.callout-important}\n**Key Takeaways:**\n\n- The `SpatialExperiment` object is a versatile container for spatial transcriptomics data.\n- It allows for easy access and manipulation of spatial coordinates, image data, and assay data.\n- Various operations like subsetting, combining, and image transformations can be performed efficiently.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}