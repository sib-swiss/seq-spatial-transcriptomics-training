[
  {
    "objectID": "qmd/reference_guide.html",
    "href": "qmd/reference_guide.html",
    "title": "Epigenetic Analysis Reference Guide",
    "section": "",
    "text": "This document provides comprehensive reference tables for interpreting chromatin accessibility (ATAC-seq), histone modifications, RNA expression, and DNA methylation patterns in epigenetic analysis. Each table represents different combinations of assays and their biological interpretations.\n\n\n\nATAC-seq: Assay for Transposase-Accessible Chromatin using sequencing\nH3K4me1: Histone H3 lysine 4 monomethylation (enhancer mark)\nH3K4me3: Histone H3 lysine 4 trimethylation (active promoter mark)\nH3K27ac: Histone H3 lysine 27 acetylation (active enhancer/promoter mark)\nH3K27me3: Histone H3 lysine 27 trimethylation (Polycomb repressive mark)\nRNA-seq: RNA sequencing (gene expression)\nDNAme: DNA methylation (CpG methylation)\nTSS: Transcription Start Site\n\n\n\n\n\n↑: Increased signal/activity\n↓: Decreased signal/activity\n∼: Low level or no significant change\nN/A: Not applicable\n-: No change or not detected"
  },
  {
    "objectID": "qmd/reference_guide.html#key-abbreviations",
    "href": "qmd/reference_guide.html#key-abbreviations",
    "title": "Epigenetic Analysis Reference Guide",
    "section": "",
    "text": "ATAC-seq: Assay for Transposase-Accessible Chromatin using sequencing\nH3K4me1: Histone H3 lysine 4 monomethylation (enhancer mark)\nH3K4me3: Histone H3 lysine 4 trimethylation (active promoter mark)\nH3K27ac: Histone H3 lysine 27 acetylation (active enhancer/promoter mark)\nH3K27me3: Histone H3 lysine 27 trimethylation (Polycomb repressive mark)\nRNA-seq: RNA sequencing (gene expression)\nDNAme: DNA methylation (CpG methylation)\nTSS: Transcription Start Site"
  },
  {
    "objectID": "qmd/reference_guide.html#legend",
    "href": "qmd/reference_guide.html#legend",
    "title": "Epigenetic Analysis Reference Guide",
    "section": "",
    "text": "↑: Increased signal/activity\n↓: Decreased signal/activity\n∼: Low level or no significant change\nN/A: Not applicable\n-: No change or not detected"
  },
  {
    "objectID": "qmd/course_schedule.html",
    "href": "qmd/course_schedule.html",
    "title": "Course schedule",
    "section": "",
    "text": "Note\n\n\n\nApart from the starting time the time schedule is indicative. Because we can not plan a course by the minute, in practice the time points will deviate."
  },
  {
    "objectID": "qmd/course_schedule.html#day-1",
    "href": "qmd/course_schedule.html#day-1",
    "title": "Course schedule",
    "section": "Day 1",
    "text": "Day 1\n\n\n\n\n\n\n\n\n\n\n\n\nblock\nstart\nend\ntopic\ninstructor\npresentation\nexercise\n\n\n\n\nintroduction\n9:15\n9:45\nintroduction to the course\n\n\n\n\n\nblock 1\n9:45\n10:30\nintroduction to spatial omics\n\n\n\n\n\nbreak\n10:30\n10:45\n\n\n\n\n\n\nblock 2\n10:45\n12:30\nData structure + quality control + normalization and scaling\n\n\n\n\n\nbreak\n12:30\n13:30\n\n\n\n\n\n\nblock 3\n1:30\n3:00\nExercises quality control\n\n\n\n\n\nbreak\n3:00\n3:15\n\n\n\n\n\n\nblock 4\n3:15\n5:15\nFeature selection, dimensionality reduction and clustering"
  },
  {
    "objectID": "qmd/course_schedule.html#day-2",
    "href": "qmd/course_schedule.html#day-2",
    "title": "Course schedule",
    "section": "Day 2",
    "text": "Day 2\n\n\n\n\n\n\n\n\n\n\n\n\nblock\nstart\nend\ntopic\ninstructor\npresentation\nexercise\n\n\n\n\nblock 1\n9:15\n10:30\nSpatial statistics\nMartin Emonts\n\n\n\n\nbreak\n10:30\n10:45\n\n\n\n\n\n\nblock 2\n10:45\n12:30\nDESpace\nPeiying Cai\n\n\n\n\nbreak\n12:30\n13:30\n\n\n\n\n\n\nblock 3\n1:30\n3:00\nMultiple samples DESpace, differential colocalization\n\n\n\n\n\nbreak\n3:00\n3:15\n\n\n\n\n\n\nblock 4\n3:15\n5:15\nDeconvolution"
  },
  {
    "objectID": "index.html#license-copyright",
    "href": "index.html#license-copyright",
    "title": "Introduction to Sequencing-based Spatial Transcriptomics Data Analysis",
    "section": "License & copyright",
    "text": "License & copyright\nLicense: CC BY 4.0\nCopyright: SIB Swiss Institute of Bioinformatics"
  },
  {
    "objectID": "index.html#learning-outcomes",
    "href": "index.html#learning-outcomes",
    "title": "Introduction to Sequencing-based Spatial Transcriptomics Data Analysis",
    "section": "Learning outcomes",
    "text": "Learning outcomes\n\nGeneral learning outcomes\nAt the end of the course, the participants are expected to:\n\nExplain the principles and describe applications of sequencing-based spatially-resolved transcriptomics (SRT)\nDefine the differences between sequencing-based SRT methods and imaging-based SRT methods.\nIdentify potential pitfalls and limitations of sequencing-based SRT experiments and analysis workflows.\nAssess and interpret raw sequencing outputs and spatial metadata files, understanding their structure and relevance for downstream analyses.\nDefine important aspects of quality control, feature selection, dimensionality reduction and differentail gene expression to SRT data and apply those.\nClarify various spatial statistics and their application to biological questions.\nUse frequently-used methods to analyze multi-sample SRT experiments.\n\n\n\nLearning outcomes explained\nTo reach the general learning outcomes above, we have set a number of smaller learning outcomes. Each chapter starts with these smaller learning outcomes. Use these at the start of a chapter to get an idea what you will learn. Use them also at the end of a chapter to evaluate whether you have learned what you were expected to learn."
  },
  {
    "objectID": "index.html#learning-experiences",
    "href": "index.html#learning-experiences",
    "title": "Introduction to Sequencing-based Spatial Transcriptomics Data Analysis",
    "section": "Learning experiences",
    "text": "Learning experiences\nTo reach the learning outcomes we will use lectures, exercises, polls and group work. During exercises, you are free to discuss with other participants. During lectures, focus on the lecture only.\n\nExercises\nEach block has practical work involved. Some more than others. The practicals are subdivided into chapters, and we’ll have a (short) discussion after each chapter. All answers to the practicals are incorporated, but they are hidden. Do the exercise first by yourself, before checking out the answer. If your answer is different from the answer in the practicals, try to figure out why they are different."
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html",
    "href": "day1/day1-2_spotsweeper_qc.html",
    "title": "Exercise 2",
    "section": "",
    "text": "In this second exercise, we will focus on the critical step of quality control (QC) for spatial transcriptomics data. Using the SpotSweeper package, we will learn how to identify and handle low-quality spots and spatial artifacts, which is essential for ensuring the reliability of downstream analyses. We will calculate various QC metrics, detect local outliers, and visualize the results to gain a comprehensive understanding of data quality."
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#quality-control-using-spotsweeper",
    "href": "day1/day1-2_spotsweeper_qc.html#quality-control-using-spotsweeper",
    "title": "Exercise 2",
    "section": "",
    "text": "In this second exercise, we will focus on the critical step of quality control (QC) for spatial transcriptomics data. Using the SpotSweeper package, we will learn how to identify and handle low-quality spots and spatial artifacts, which is essential for ensuring the reliability of downstream analyses. We will calculate various QC metrics, detect local outliers, and visualize the results to gain a comprehensive understanding of data quality."
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#learning-objectives",
    "href": "day1/day1-2_spotsweeper_qc.html#learning-objectives",
    "title": "Exercise 2",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this exercise, you will be able to:\n\nLoad a SpatialExperiment object from a .qs file.\nCalculate per-spot QC metrics.\nIdentify local outliers based on various QC metrics.\nDetect spatial artifacts using SpotSweeper.\nVisualize QC metrics and detected artifacts."
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#question-impact-of-subsetting",
    "href": "day1/day1-2_spotsweeper_qc.html#question-impact-of-subsetting",
    "title": "Exercise 2",
    "section": "Question: Impact of Subsetting",
    "text": "Question: Impact of Subsetting\nWhat are the potential implications of subsetting the data (both genes and spots) for QC analysis in a real-world scenario?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nSubsetting the data can significantly speed up computations, which is beneficial for tutorials and initial exploration. However, in a real-world scenario, it has several implications:\n\n\nLoss of Information: Subsetting genes might remove important genes that could be relevant for certain QC metrics or biological insights. Subsetting spots might miss localized artifacts or rare cell populations.\n\nAltered Statistics: Metrics like localOutliers and findArtifacts rely on neighborhood information. Subsetting spots can change the definition of neighborhoods and thus alter the results of these analyses.\n\nRepresentativeness: A small subset might not be representative of the entire dataset, potentially leading to biased conclusions about data quality.\n\nTherefore, while useful for quick demonstrations, full QC should ideally be performed on the complete dataset."
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#question-1",
    "href": "day1/day1-2_spotsweeper_qc.html#question-1",
    "title": "Exercise 2",
    "section": "Question 1",
    "text": "Question 1\nHow many spots were identified as local outliers based on the combined criteria?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n# Count the number of spots flagged as local outliers.\ntable(spe$local_outliers)"
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#spatial-artifact-detection-with-spotsweeper",
    "href": "day1/day1-2_spotsweeper_qc.html#spatial-artifact-detection-with-spotsweeper",
    "title": "Exercise 2",
    "section": "Spatial Artifact Detection with SpotSweeper\n",
    "text": "Spatial Artifact Detection with SpotSweeper\n\nSpotSweeper is designed to detect spatial artifacts that might not be captured by simple local outlier detection. This is particularly useful for identifying regions with systematic issues.\n\n# not working anymore\nspe &lt;- findArtifacts(spe,\n  mito_percent = \"subsets_Mito_percent\", # Using the metric calculated by scuttle\n  mito_sum = \"subsets_Mito_sum\", # Using the metric calculated by scuttle\n  name = \"artifact\"\n)\n\n# Check that \"artifact\" is now a column in colData, indicating detected artifacts.\ncolnames(colData(spe))"
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#question-2",
    "href": "day1/day1-2_spotsweeper_qc.html#question-2",
    "title": "Exercise 2",
    "section": "Question 2",
    "text": "Question 2\nWhat is the difference between localOutliers and findArtifacts? When would you use one over the other?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nlocalOutliers identifies individual spots that deviate significantly from their immediate neighbors based on a single metric (e.g., unusually low library size). It’s good for detecting isolated problematic spots.\nfindArtifacts from SpotSweeper is designed to detect larger, spatially coherent regions of problematic spots (artifacts) by considering multiple metrics and their spatial patterns. It’s more suitable for identifying systematic issues across a larger area of the tissue.\nYou would use localOutliers for general per-spot QC and findArtifacts when you suspect or observe larger, structured regions of poor quality that might indicate experimental issues or tissue damage."
  },
  {
    "objectID": "day1/day1-2_spotsweeper_qc.html#question-3",
    "href": "day1/day1-2_spotsweeper_qc.html#question-3",
    "title": "Exercise 2",
    "section": "Question 3",
    "text": "Question 3\nPlot the spatial distribution of the artifact column identified by SpotSweeper.\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n# Plot the spatial distribution of the detected artifacts.\nplotQCmetrics(spe,\n    metric = \"subsets_Mito_percent\", # You can choose any relevant metric to display\n    outliers = \"artifact\", \n    point_size = 1.1\n) +\n    ggtitle(\"Detected Spatial Artifacts\")\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nKey Takeaways:\n\n\nscuttle::addPerCellQCMetrics provides essential per-spot QC metrics.\n\nSpotSweeper::localOutliers helps identify individual problematic spots.\n\nSpotSweeper::findArtifacts is powerful for detecting spatially coherent regions of poor quality.\nVisualizing QC results is critical for data interpretation and downstream analysis decisions."
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#spatialexperiment-object",
    "href": "day1/day1-1_SpatialExperiment.html#spatialexperiment-object",
    "title": "Exercise 1",
    "section": "\nSpatialExperiment object",
    "text": "SpatialExperiment object\nIn this first exercise, we will dive into the SpatialExperiment object, a cornerstone of spatial transcriptomics analysis in R. We will learn how to load Visium HD data, explore the different components of the object, and perform basic manipulations. By the end of this session, you will have a solid understanding of how to handle spatial transcriptomics data within the R/Bioconductor ecosystem."
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#learning-objectives",
    "href": "day1/day1-1_SpatialExperiment.html#learning-objectives",
    "title": "Exercise 1",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this exercise, you will be able to:\n\nUnderstand the structure of a SpatialExperiment object.\nAccess and interpret spatialCoords and imgData.\nPerform basic subsetting operations on SpatialExperiment objects.\nCombine multiple SpatialExperiment objects.\nApply image transformations (rotation, mirroring) to spatial data."
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#spatialcoords",
    "href": "day1/day1-1_SpatialExperiment.html#spatialcoords",
    "title": "Exercise 1",
    "section": "spatialCoords",
    "text": "spatialCoords\n\n# Display the head of the spatial coordinates, which represent the (x, y) locations of each spot.\nhead(spatialCoords(spe))\n\n                      pxl_col_in_fullres pxl_row_in_fullres\ns_008um_00301_00321-1           9217.893           27883.12\ns_008um_00602_00290-1           8394.152           19079.20\ns_008um_00425_00829-1          24094.123           24396.58\ns_008um_00526_00291-1           8402.675           21300.29\ns_008um_00681_00396-1          11512.628           16799.19\ns_008um_00078_00444-1          12750.753           34432.55\n\n# List the names of the spatial coordinate columns.\nspatialCoordsNames(spe)\n\n[1] \"pxl_col_in_fullres\" \"pxl_row_in_fullres\""
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#imgdata",
    "href": "day1/day1-1_SpatialExperiment.html#imgdata",
    "title": "Exercise 1",
    "section": "imgData",
    "text": "imgData\n\n# Display the image data associated with the SpatialExperiment object.\nimgData(spe)\n\nDataFrame with 1 row and 4 columns\n    sample_id    image_id   data scaleFactor\n  &lt;character&gt; &lt;character&gt; &lt;list&gt;   &lt;numeric&gt;\n1    sample01      lowres   ####  0.00843811\n\n\n\nSpatialImage class\n\n# Extract the SpatialImage object from the SpatialExperiment object.\nspi &lt;- getImg(spe)\nspi\n\n600 x 496 (width x height) StoredSpatialImage\nimgSource():\n  /Users/detanw/Desktop/seq-spatial-transcriptomics-training/data/p1_crc/binned_ou\n  tputs/square_008um/spatial/tissue_lowres_image.png \n\n# Plot the raster image from the SpatialImage object.\nplot(imgRaster(spe))"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#question-1",
    "href": "day1/day1-1_SpatialExperiment.html#question-1",
    "title": "Exercise 1",
    "section": "Question 1",
    "text": "Question 1\nHow would you extract the image data for a specific sample and image ID, for example, ‘sample01’ and ‘lowres’?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n# Extract the image data for 'sample01' and 'lowres' image ID.\ngetImg(spe, sample_id = \"sample01\", image_id = \"lowres\")"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#subset-by-sample_id",
    "href": "day1/day1-1_SpatialExperiment.html#subset-by-sample_id",
    "title": "Exercise 1",
    "section": "subset by sample_id\n",
    "text": "subset by sample_id\n\n\n# Subset the SpatialExperiment object to include only observations from 'sample01'.\nsub &lt;- spe[, spe$sample_id == \"sample01\"]"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#question-2",
    "href": "day1/day1-1_SpatialExperiment.html#question-2",
    "title": "Exercise 1",
    "section": "Question 2",
    "text": "Question 2\nHow would you subset the SpatialExperiment object to only include spots where the in_tissue column in colData is TRUE?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n# Subset the SpatialExperiment object to retain only spots that are within the tissue area.\nspe_in_tissue &lt;- spe[, colData(spe)$in_tissue]\n# Verify the number of spots after subsetting.\nsum(colData(spe)$in_tissue) == ncol(spe_in_tissue)"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#retain-only-observations-that-map-to-tissue",
    "href": "day1/day1-1_SpatialExperiment.html#retain-only-observations-that-map-to-tissue",
    "title": "Exercise 1",
    "section": "retain only observations that map to tissue",
    "text": "retain only observations that map to tissue\n\n# Subset the SpatialExperiment object to retain only spots that are within the tissue area.\nsub &lt;- spe[, colData(spe)$in_tissue]\n# Verify that the number of columns in the subsetted object matches the count of 'in_tissue' spots.\nsum(colData(spe)$in_tissue) == ncol(sub)\n\n[1] TRUE"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#combining-samples",
    "href": "day1/day1-1_SpatialExperiment.html#combining-samples",
    "title": "Exercise 1",
    "section": "Combining samples",
    "text": "Combining samples\n\n# Create two copies of the SpatialExperiment object.\nspe1 &lt;- spe2 &lt;- spe\n# Combine the two SpatialExperiment objects column-wise (samples).\nspe3 &lt;- cbind(spe1, spe2)\n\n'sample_id's are duplicated across 'SpatialExperiment' objects to cbind; appending sample indices.\n\n# Display the unique sample IDs in the combined object.\nunique(spe3$sample_id)\n\n[1] \"sample01.1\" \"sample01.2\""
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#question-3",
    "href": "day1/day1-1_SpatialExperiment.html#question-3",
    "title": "Exercise 1",
    "section": "Question 3",
    "text": "Question 3\nImagine you have three SpatialExperiment objects (spe1, spe2, spe3). How would you combine all three into a single object?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n# Create three SpatialExperiment objects (for demonstration).\nspe1_q3 &lt;- spe2_q3 &lt;- spe3_q3 &lt;- spe\n# Combine all three SpatialExperiment objects.\nspe_combined_q3 &lt;- cbind(spe1_q3, spe2_q3, spe3_q3)\n# Display unique sample IDs in the combined object.\nunique(spe_combined_q3$sample_id)"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#image-transformation",
    "href": "day1/day1-1_SpatialExperiment.html#image-transformation",
    "title": "Exercise 1",
    "section": "Image transformation",
    "text": "Image transformation\nRotation\n\n# Extract the first image from the SpatialExperiment object.\nspi &lt;- getImg(spe)\n# Apply counter-clockwise (-90 degrees) and clockwise (+90 degrees) rotations to the image.\nspi1 &lt;- rotateImg(spi, -90)\nspi2 &lt;- rotateImg(spi, +90)\n# Visualize the original and rotated images for comparison.\npar(mfrow = c(1, 3))\nplot(as.raster(spi))\nplot(as.raster(spi1))\nplot(as.raster(spi2))\n\n\n\n\n\n\n\n\n# Specify the sample and image identifiers for targeted rotation.\nsid &lt;- \"sample01\"\niid &lt;- \"lowres\"\n# Apply a counter-clockwise rotation of -90 degrees to the specified image within the SpatialExperiment object.\ntmp &lt;- rotateImg(spe,\n  sample_id = sid,\n  image_id = iid,\n  degrees = -90\n)\n# Visualize the original and rotated images for the specified sample and image ID.\npar(mfrow = c(1, 2))\nplot(imgRaster(spe, sid, iid))\nplot(imgRaster(tmp, sid, iid))\n\n\n\n\n\n\n\nMirroring\n\n# Extract the first image from the SpatialExperiment object.\nspi &lt;- getImg(spe)\n# Mirror the image horizontally (\"h\") and vertically (\"v\").\nspi1 &lt;- mirrorImg(spi, \"h\")\nspi2 &lt;- mirrorImg(spi, \"v\")\n# Visualize the original and mirrored images for comparison.\npar(mfrow = c(1, 3))\nplot(as.raster(spi))\nplot(as.raster(spi1))\nplot(as.raster(spi2))\n\n\n\n\n\n\n\n\n# Specify the sample and image identifiers for targeted mirroring.\nsid &lt;- \"sample01\"\niid &lt;- \"lowres\"\n# Mirror the specified image horizontally within the SpatialExperiment object.\ntmp &lt;- mirrorImg(spe,\n  sample_id = sid,\n  image_id = iid,\n  axis = \"h\"\n)\nplot(imgRaster(tmp, sid, iid))"
  },
  {
    "objectID": "day1/day1-1_SpatialExperiment.html#question-4",
    "href": "day1/day1-1_SpatialExperiment.html#question-4",
    "title": "Exercise 1",
    "section": "Question 4",
    "text": "Question 4\nHow would you first rotate an image by 90 degrees clockwise and then mirror it horizontally?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n# Extract the first image.\nspi_q4 &lt;- getImg(spe)\n# First, rotate the image by 90 degrees clockwise.\nrotated_spi_q4 &lt;- rotateImg(spi_q4, degrees = 90)\n# Then, mirror the rotated image horizontally.\nfinal_transformed_spi_q4 &lt;- mirrorImg(rotated_spi_q4, axis = \"h\")\n# Visualize the original, rotated, and final transformed images.\npar(mfrow = c(1, 3))\nplot(as.raster(spi_q4))\nplot(as.raster(rotated_spi_q4))\nplot(as.raster(final_transformed_spi_q4))"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html",
    "href": "day1/day1-3_feature_dimred_cluster.html",
    "title": "Exercise 3",
    "section": "",
    "text": "In this third exercise, we will explore the essential techniques of feature selection, dimensionality reduction, and clustering to uncover meaningful biological insights from spatial transcriptomics data. We will learn how to identify the most informative genes, visualize complex high-dimensional data in lower-dimensional spaces using methods like PCA and UMAP, and group spots into clusters representing distinct spatial domains. These steps are fundamental for interpreting the underlying biological structure of the tissue."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#feature-selection-dimensionality-reduction-and-clustering",
    "href": "day1/day1-3_feature_dimred_cluster.html#feature-selection-dimensionality-reduction-and-clustering",
    "title": "Exercise 3",
    "section": "",
    "text": "In this third exercise, we will explore the essential techniques of feature selection, dimensionality reduction, and clustering to uncover meaningful biological insights from spatial transcriptomics data. We will learn how to identify the most informative genes, visualize complex high-dimensional data in lower-dimensional spaces using methods like PCA and UMAP, and group spots into clusters representing distinct spatial domains. These steps are fundamental for interpreting the underlying biological structure of the tissue."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#learning-objectives",
    "href": "day1/day1-3_feature_dimred_cluster.html#learning-objectives",
    "title": "Exercise 3",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this exercise, you will be able to:\n\nPerform feature selection to identify highly variable genes (HVGs).\nApply dimensionality reduction techniques like PCA and UMAP.\nPerform clustering to identify distinct spatial domains or cell populations.\nVisualize the results of dimensionality reduction and clustering in both reduced dimension space and spatial context."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#libraries",
    "href": "day1/day1-3_feature_dimred_cluster.html#libraries",
    "title": "Exercise 3",
    "section": "Libraries",
    "text": "Libraries\n\nlibrary(SpatialExperiment)\nlibrary(qs2)\nlibrary(scran) # For feature selection and clustering\nlibrary(scater) # For dimensionality reduction\nlibrary(ggplot2)\nlibrary(patchwork) # For combining plots\nlibrary(bluster) # For clustering\nlibrary(escheR) # For spatial plotting\nlibrary(pheatmap) # For clustering heatmap"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#load-and-prepare-data",
    "href": "day1/day1-3_feature_dimred_cluster.html#load-and-prepare-data",
    "title": "Exercise 3",
    "section": "Load and Prepare Data",
    "text": "Load and Prepare Data\nWe will start by loading the SpatialExperiment object and performing the necessary preprocessing steps, including subsetting for demonstration purposes, similar to the previous exercise.\n\n# Load the SpatialExperiment object from the .qs2 file.\nspe &lt;- qs2::qs_read(\"results/01_spe.qs2\", nthreads = 1)\n\n# Change row names from gene IDs to gene symbols.\nrownames(spe) &lt;- rowData(spe)$Symbol\n\n# Identify mitochondrial transcripts.\nis.mito &lt;- rownames(spe)[grepl(\"^MT-\", rownames(spe))]\n\n# Calculate per-spot QC metrics.\nspe &lt;- scuttle::addPerCellQCMetrics(spe, subsets = list(Mito = is.mito))\n\nLoading required namespace: HDF5Array\n\n# Subsetting for Demonstration (to reduce computation time)\nset.seed(123) # for reproducibility\nnum_genes_to_keep &lt;- 10000\nif (nrow(spe) &gt; num_genes_to_keep) {\n  gene_indices &lt;- sample(seq_len(nrow(spe)), num_genes_to_keep)\n  spe_subset &lt;- spe[gene_indices, ]\n} else {\n  spe_subset &lt;- spe\n}\n\nnum_spots_to_keep &lt;- 10000\nif (ncol(spe_subset) &gt; num_spots_to_keep) {\n  spot_indices &lt;- sample(seq_len(ncol(spe_subset)), num_spots_to_keep)\n  spe_subset &lt;- spe_subset[, spot_indices]\n} else {\n  spe_subset &lt;- spe_subset\n}\n\nspe &lt;- spe_subset\n\n# Remove spots with NA/NaN/Inf in mitochondrial QC metrics or spatial coordinates\nna_mito_percent &lt;- is.na(colData(spe)$subsets_Mito_percent)\nna_mito_sum &lt;- is.na(colData(spe)$subsets_Mito_sum)\nspots_to_remove_mito &lt;- na_mito_percent | na_mito_sum\nif (any(spots_to_remove_mito)) {\n  message(paste0(\"Removing \", sum(spots_to_remove_mito), \" spots with NA mitochondrial QC metrics.\"))\n  spe &lt;- spe[, !spots_to_remove_mito]\n}\n\nRemoving 25 spots with NA mitochondrial QC metrics.\n\nspatial_coords &lt;- spatialCoords(spe)\nproblematic_spatial_coords &lt;- apply(spatial_coords, 1, function(row) any(is.na(row) | is.nan(row) | is.infinite(row)))\nif (any(problematic_spatial_coords)) {\n  message(paste0(\"Removing \", sum(problematic_spatial_coords), \" spots with NA/NaN/Inf in spatial coordinates.\"))\n  spe &lt;- spe[, !problematic_spatial_coords]\n}\n\n# Remove spots with zero total counts, as these can cause issues with size factor calculation during normalization.\nzero_sum_spots &lt;- colSums(counts(spe)) == 0\nif (any(zero_sum_spots)) {\n  message(paste0(\"Removing \", sum(zero_sum_spots), \" spots with zero total counts.\"))\n  spe &lt;- spe[, !zero_sum_spots]\n}\n\nRemoving 62 spots with zero total counts.\n\n# Log-normalize counts for downstream analysis\nspe &lt;- logNormCounts(spe)\n\nSpatially-Aware Normalization (Optional)\nWhile logNormCounts provides a general-purpose normalization, specialized spatially-aware normalization methods exist (e.g., SpaNorm package). These methods aim to correct for technical variations while preserving true spatial biological patterns. Depending on the dataset and research question, exploring such advanced normalization techniques might be beneficial.\nSize Factor Analysis\n\nAfter log-normalization, we can inspect the computed size factors.\nSize factors account for differences in sequencing depth between spots.\n\n\n# Display a summary of the calculated size factors.\nsummary(sizeFactors(spe))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008285 0.215407 0.671077 1.000000 1.433288 8.052924 \n\n# Visualize the distribution of size factors using a histogram.\nhist(sizeFactors(spe),\n  breaks = 50, main = \"Histogram of Size Factors\",\n  xlab = \"Size Factor\"\n)\n\n\n\n\n\n\n# Display the dimensions of the prepared object\ndim(spe)\n\n[1] 10000  9913"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#feature-selection",
    "href": "day1/day1-3_feature_dimred_cluster.html#feature-selection",
    "title": "Exercise 3",
    "section": "Feature Selection",
    "text": "Feature Selection\nHighly Variable Genes (HVGs)\nFeature selection is a crucial step to reduce noise and focus on genes that show significant biological variation across spots. We typically identify Highly Variable Genes (HVGs) as these are more likely to distinguish different cell types or spatial domains.\n\n# Model gene variance to identify highly variable genes.\n# This function fits a trend to the technical noise and calculates biological variance.\ndec &lt;- modelGeneVar(spe)\n\n# Select the top N highly variable genes.\n# The number of HVGs can influence downstream dimensionality reduction and clustering.\nhvg &lt;- getTopHVGs(dec, n = 2000) # Selecting top 2000 HVGs\n\n# Store HVG information in rowData\nrowData(spe)$hvg &lt;- rowData(spe)$Symbol %in% hvg\n\n# Display the number of HVGs identified\nsum(rowData(spe)$hvg)\n\n[1] 2000\n\n# Visualize the mean-variance relationship and the fitted trend.\n# This plot helps to understand how gene variability changes with expression level.\nplot(dec$mean, dec$total,\n  xlab = \"Mean expression (log-counts)\",\n  ylab = \"Total variance (log-counts)\",\n  main = \"Mean-Variance Trend\"\n)\ncurve(metadata(dec)$trend(x), add = TRUE, col = \"dodgerblue\", lwd = 2)"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-1",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-1",
    "title": "Exercise 3",
    "section": "Question 1",
    "text": "Question 1\nWhy is it important to perform feature selection (e.g., identifying HVGs) before dimensionality reduction and clustering in spatial transcriptomics data?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nFeature selection is important for several reasons:\n\n\nNoise Reduction: It helps to filter out genes that show little variation and are likely dominated by technical noise, thus improving the signal-to-noise ratio.\n\nComputational Efficiency: Reducing the number of features (genes) significantly decreases the computational burden for subsequent steps like dimensionality reduction and clustering, especially with large datasets.\n\nImproved Interpretation: By focusing on genes with high biological variability, we are more likely to identify meaningful biological patterns and distinctions between cell types or spatial domains.\n\nMitigating the Curse of Dimensionality: High-dimensional data can make it difficult for algorithms to find meaningful patterns; feature selection helps alleviate this.\n\n\n\n\nSpatially Variable Genes (SVGs)\nBeyond simply highly variable genes, in spatial transcriptomics, we are often interested in genes whose expression patterns vary significantly across the spatial dimensions. These are known as Spatially Variable Genes (SVGs).\nIdentifying SVGs can reveal genes that define distinct tissue regions, cell types, or biological processes with specific spatial localization.\nWhile several advanced methods and packages exist for SVG identification (e.g., nnSVG, SPARK-X, Giotto), implementing a full SVG analysis is beyond the scope of this introductory exercise. However, it’s important to be aware of this concept as a crucial step in spatial data analysis."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-1.2",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-1.2",
    "title": "Exercise 3",
    "section": "Question 1.2",
    "text": "Question 1.2\nHow do Spatially Variable Genes (SVGs) differ from Highly Variable Genes (HVGs), and why is identifying SVGs particularly important in spatial transcriptomics?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nHVGs (Highly Variable Genes): Genes that show high variability in expression across all spots/cells in a dataset, regardless of their spatial location. They are informative for distinguishing cell types or states in a general sense.\n\nSVGs (Spatially Variable Genes): Genes whose expression levels exhibit a non-random, structured pattern across the spatial coordinates of the tissue. Their variability is specifically linked to their position.\n\nIdentifying SVGs is particularly important in spatial transcriptomics because:\n\n\nReveals Spatial Organization: SVGs directly highlight genes that contribute to the spatial organization of the tissue, defining distinct anatomical regions or functional domains.\n\nBiological Insights: They can pinpoint genes involved in cell-cell communication, developmental gradients, or disease progression within a tissue context.\n\nTargeted Analysis: SVGs can be used for more targeted downstream analysis, focusing on genes that are most relevant to the spatial biology of interest."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#dimensionality-reduction",
    "href": "day1/day1-3_feature_dimred_cluster.html#dimensionality-reduction",
    "title": "Exercise 3",
    "section": "Dimensionality Reduction",
    "text": "Dimensionality Reduction\nDimensionality reduction techniques project high-dimensional gene expression data into a lower-dimensional space, making it easier to visualize and analyze. This step is essential for identifying global patterns and preparing data for clustering.\nPrincipal Component Analysis (PCA)\nPCA is a linear dimensionality reduction technique that transforms the data into a new coordinate system such that the greatest variance by some projection of the data comes to lie on the first coordinate (called the first principal component), the second greatest variance on the second coordinate, and so on.\n\n# Run PCA on the highly variable genes.\n# We use the 'ncomponents' argument to specify the number of principal components to retain.\nspe &lt;- runPCA(spe, ncomponents = 50, subset_row = rowData(spe)$hvg)\n\n# Visualize the explained variance by each principal component.\n# This helps in determining how many PCs capture most of the variance.\nplot(attr(reducedDim(spe, \"PCA\"), \"percentVar\"),\n  xlab = \"PC\", ylab = \"Proportion of variance explained\",\n  main = \"PCA Scree Plot\"\n)\n\n\n\n\n\n\n# Visualize the PCA embedding.\n# This helps to see the main sources of variation in the data.\nplotPCA(spe, colour_by = \"sum\") +\n  ggtitle(\"PCA colored by Library Size\")"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-2",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-2",
    "title": "Exercise 3",
    "section": "Question 2",
    "text": "Question 2\nBased on the PCA scree plot, how would you determine an appropriate number of principal components to retain for downstream analysis? What are the trade-offs of choosing too few or too many PCs?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nAn appropriate number of principal components (PCs) can often be determined by looking for an “elbow point” in the scree plot, where the explained variance starts to level off. This point suggests that subsequent PCs explain much less variance and might represent noise rather than meaningful biological signal.\n\n\nToo few PCs: Might lead to a loss of important biological signal, as significant sources of variation could be discarded.\n\nToo many PCs: Can retain too much noise, potentially obscuring true biological patterns and increasing computational complexity for downstream steps like clustering.\n\n\n\n\nt-Distributed Stochastic Neighbor Embedding (t-SNE)\nt-SNE is another non-linear dimensionality reduction technique particularly well-suited for visualizing high-dimensional datasets. It aims to place similar data points close together in a low-dimensional map, while dissimilar points are placed far apart. It is especially good at revealing local structures in the data.\n\n# Run t-SNE on the PCA-reduced data.\n# Similar to UMAP, using PCA output as input to t-SNE is a common practice.\nspe &lt;- runTSNE(spe, dimred = \"PCA\")\n\n# Visualize the t-SNE embedding.\nplotTSNE(spe, colour_by = \"sum\") +\n  ggtitle(\"t-SNE colored by Library Size\")"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-2.2",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-2.2",
    "title": "Exercise 3",
    "section": "Question 2.2",
    "text": "Question 2.2\nHow does t-SNE differ from UMAP in its approach to dimensionality reduction, and what are the implications for interpreting their respective visualizations?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nt-SNE and UMAP are both non-linear dimensionality reduction techniques that aim to preserve local and global data structures. However, they differ in their underlying algorithms and how they balance these aspects:\n\n\nt-SNE: Focuses heavily on preserving local neighborhoods. It tends to create tightly packed clusters, but the distances between clusters in a t-SNE plot are often not meaningful. It can be computationally more intensive for very large datasets.\n\nUMAP: Aims to preserve both local and global structures more effectively than t-SNE. Distances between clusters in a UMAP plot are generally considered more meaningful, and it is often faster and scales better to larger datasets.\n\nImplications for interpretation:\n\n\nt-SNE: Excellent for revealing distinct, compact clusters. However, the relative sizes of clusters and distances between them should be interpreted with caution.\n\nUMAP: Often provides a more faithful representation of the overall data topology, making inter-cluster distances and relative densities more interpretable. It can sometimes produce more diffuse clusters than t-SNE.\n\nChoosing between them often depends on the specific goals of the visualization and the characteristics of the data.\n\n\n\nUniform Manifold Approximation and Projection (UMAP)\nUMAP is a non-linear dimensionality reduction technique that is particularly effective at preserving both local and global data structure, making it popular for visualizing complex single-cell and spatial transcriptomics data.\n\n# Run UMAP on the PCA-reduced data.\n# Using PCA output as input to UMAP is a common practice to denoise the data first.\nspe &lt;- runUMAP(spe, dimred = \"PCA\")\n\n# Visualize the UMAP embedding.\n# We can color the points by various metadata, for example, by library size.\nplotUMAP(spe, colour_by = \"sum\") +\n  ggtitle(\"UMAP colored by Library Size\")"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-3",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-3",
    "title": "Exercise 3",
    "section": "Question 3",
    "text": "Question 3\nCompare and contrast PCA and UMAP. In what scenarios would you prefer to use one over the other for visualizing spatial transcriptomics data?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\n\n\nPCA (Principal Component Analysis): A linear method that identifies directions of maximal variance. It’s good for understanding global variance and can be interpreted as a denoising step. It preserves large-scale structures but can compress complex non-linear relationships.\n\nUMAP (Uniform Manifold Approximation and Projection): A non-linear method that aims to preserve both local and global data structure. It’s excellent for visualizing complex, high-dimensional data in 2D or 3D, often revealing distinct clusters more clearly.\n\nWhen to use which:\n\n\nPrefer PCA: For initial data exploration, denoising, and when linearity is assumed or desired. It’s also useful for understanding the main sources of variation.\n\nPrefer UMAP: For visualizing complex relationships, identifying distinct clusters, and when non-linear structures are expected. It’s often used after PCA to further reduce dimensions for visualization.\n\nFor spatial transcriptomics, UMAP is often preferred for visualization due to its ability to reveal distinct spatial domains or cell types that might have non-linear relationships in gene expression."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#clustering",
    "href": "day1/day1-3_feature_dimred_cluster.html#clustering",
    "title": "Exercise 3",
    "section": "Clustering",
    "text": "Clustering\nClustering aims to group spots with similar gene expression profiles, which can correspond to distinct cell types or tissue regions. We will use a graph-based clustering approach, which is common in single-cell and spatial analyses. Other methods like k-means or hierarchical clustering are also available but may have different assumptions or computational properties.\n\n# Build a Shared Nearest Neighbor (SNN) graph based on the PCA-reduced data.\n# The k parameter defines the number of nearest neighbors to consider.\nsnn_graph &lt;- buildSNNGraph(spe, k = 10, use.dimred = \"PCA\")\n\n# Perform clustering on the SNN graph using the Walktrap algorithm.\n# The 'cluster_walktrap' function from igraph (used via bluster) is a common choice.\nclusters &lt;- igraph::cluster_walktrap(snn_graph)$membership\n\n# Add the cluster assignments to the colData of the SpatialExperiment object.\ncolData(spe)$clusters &lt;- factor(clusters)\n\n# Display the number of spots in each cluster\ntable(colData(spe)$clusters)\n\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n 378  971 2298 2301  733   85   54   28  783  130  904  336   57   66   15   22 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n 177   36   32   28   15   27   44   17   14   27   23   40   21   12  102   13 \n  33   34   35   36   37   38 \n  21   34   22   22   16    9 \n\n### Evaluating Cluster Quality with Silhouette Scores\n# Silhouette scores provide a measure of how similar an object is to its own cluster\n# compared to other clusters. Values range from -1 (poor) to +1 (good).\n\n# Calculate silhouette scores. Requires the 'cluster' package.\nlibrary(cluster)\nsil &lt;- silhouette(clusters, dist(reducedDim(spe, \"PCA\")))\n\n# Summarize silhouette scores\nsummary(sil)\n\nSilhouette of 9913 units in 38 clusters from silhouette.default(x = clusters, dist = dist(reducedDim(spe, \"PCA\"))) :\n Cluster sizes and average silhouette widths:\n        378         971        2298        2301         733          85 \n-0.18409593 -0.01823542 -0.28903760  0.05662016  0.84972350  0.03572011 \n         54          28         783         130         904         336 \n-0.03895411  0.43055504 -0.13575931  0.26518486 -0.18824899 -0.17851550 \n         57          66          15          22         177          36 \n 0.32912286  0.25506870  0.21067186 -0.07400704  0.10054841  0.11714320 \n         32          28          15          27          44          17 \n 0.23941870  0.15522279  0.59778612  0.43560937  0.15172621  0.24988242 \n         14          27          23          40          21          12 \n 0.36360026  0.30704386  0.63943466 -0.17375372  0.15415070  0.34907616 \n        102          13          21          34          22          22 \n 0.21252747  0.62981027  0.49313559  0.20666208  0.54667074  0.39994482 \n         16           9 \n 0.70559045  1.00000000 \nIndividual silhouette widths:\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.788313 -0.221986 -0.087331 -0.006824  0.145734  1.000000 \n\n# Plot silhouette scores (optional, can be very dense for many spots)\n# plot(sil, main = \"Silhouette Plot\")"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-4",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-4",
    "title": "Exercise 3",
    "section": "Question 4",
    "text": "Question 4\nHow might you determine an optimal number of clusters for your spatial transcriptomics data? What are the challenges in interpreting clusters in a spatial context?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nDetermining the optimal number of clusters is often an iterative process and can involve:\n\n\nVisual Inspection: Plotting clusters on UMAP and in spatial coordinates to see if they form coherent groups.\n\nBiological Knowledge: Aligning clusters with known tissue structures or cell types.\n\nStatistical Metrics: Using metrics like silhouette scores, Davies-Bouldin index, or gap statistics. The bluster package, for instance, provides functions like pairwiseRand or pairwiseJaccard to compare different clusterings, and silhouette from cluster package can be used to evaluate cluster cohesion and separation. While a full implementation is beyond this exercise, these metrics provide quantitative ways to assess cluster quality.\n\nResolution Parameter: For graph-based clustering, adjusting the resolution parameter can influence the number of clusters.\n\nChallenges in interpreting clusters in a spatial context:\n\n\nSpatial Heterogeneity: Clusters might not always correspond to perfectly contiguous spatial regions, especially if cell types are intermingled.\n\nTechnical Artifacts: Clusters might sometimes reflect technical variations (e.g., batch effects, poor quality regions) rather than true biological differences.\n\nResolution Mismatch: The resolution of clustering might not perfectly match the biological resolution of the tissue.\n\nDefining Boundaries: It can be challenging to define clear boundaries between spatially adjacent clusters."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#marker-gene-identification",
    "href": "day1/day1-3_feature_dimred_cluster.html#marker-gene-identification",
    "title": "Exercise 3",
    "section": "Marker Gene Identification",
    "text": "Marker Gene Identification\nAfter identifying clusters, a crucial step is to characterize them by finding marker genes – genes that are highly expressed or uniquely expressed in one cluster compared to others. This helps in assigning biological identities to the discovered spatial domains.\n\n# Identify marker genes for each cluster using findMarkers from scran.\n# We compare each cluster against all other clusters.\nmarkers &lt;- findMarkers(spe, groups = colData(spe)$clusters, test.type = \"wilcox\", direction = \"up\")\n\n# Display top markers for the first few clusters.\n# For example, top 5 markers for Cluster 1.\n# Note: The output structure of findMarkers can be complex; this is a simplified view.\nif (\"1\" %in% names(markers)) {\n  head(markers[[\"1\"]], n = 5)\n}\n\nDataFrame with 5 rows and 41 columns\n              Top      p.value          FDR summary.AUC     AUC.2     AUC.3\n        &lt;integer&gt;    &lt;numeric&gt;    &lt;numeric&gt;   &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nMT-CO2          1 8.78855e-229 4.39601e-225    1.000000  0.952862  0.981186\nTMSB4X          1  3.93464e-82  4.91830e-79    0.803946  0.532081  0.444176\nMT-CYB          1 8.79203e-229 4.39601e-225    1.000000  0.874230  0.967966\nFTH1            1  6.38639e-52  5.32199e-49    0.645503  0.482021  0.480276\nMT-ND4L         2 2.20521e-137 3.67536e-134    0.880739  0.794136  0.867739\n            AUC.4     AUC.5     AUC.6     AUC.7      AUC.8     AUC.9    AUC.10\n        &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;  &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nMT-CO2   0.928156  1.000000  0.169265  0.354326 1.00000000  0.999165  1.000000\nTMSB4X   0.464394  0.803946  0.615686  0.612703 0.68594104  0.498545  0.672853\nMT-CYB   0.873861  1.000000  0.311485  1.000000 1.00000000  0.984299  0.999878\nFTH1     0.364371  0.645503  0.627747  0.645503 0.00292895  0.391531  0.604701\nMT-ND4L  0.721917  0.880739  0.343184  0.706619 0.83512850  0.886112  0.885429\n           AUC.11    AUC.12    AUC.13    AUC.14    AUC.15    AUC.16    AUC.17\n        &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nMT-CO2   0.989629  0.995748  1.000000 0.0302429  1.000000  1.000000  0.999619\nTMSB4X   0.424037  0.780593  0.791028 0.6265833  0.911376  0.751203  0.561803\nMT-CYB   0.957360  0.943169  1.000000 0.1911175  0.000000  0.000000  0.996973\nFTH1     0.436994  0.598376  0.613060 0.6216130  0.645503  0.645503  0.450117\nMT-ND4L  0.869605  0.874551  0.854265 0.2183141  0.925926  0.648870  0.906825\n           AUC.18    AUC.19    AUC.20    AUC.21    AUC.22    AUC.23     AUC.24\n        &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;  &lt;numeric&gt;\nMT-CO2   1.000000 0.0283978  0.815193  0.000000 1.0000000  1.000000 0.00529101\nTMSB4X   0.701426 0.7179646  0.725246  0.911376 0.7787086  0.718434 0.85776533\nMT-CYB   0.967188 1.0000000  1.000000  1.000000 0.0225848  1.000000 1.00000000\nFTH1     0.645503 0.6455026  0.601285  0.645503 0.6455026  0.632786 0.64550265\nMT-ND4L  0.900573 0.7621114  0.756472  0.925926 0.7898295  0.904942 0.81886088\n           AUC.25    AUC.26    AUC.27    AUC.28    AUC.29    AUC.30    AUC.31\n        &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nMT-CO2   1.000000  1.000000  1.000000  1.000000 0.1119929  1.000000  0.919883\nTMSB4X   0.846277  0.686410  0.661433  0.613922 0.7083648  0.767967  0.455895\nMT-CYB   1.000000  0.984666  1.000000  0.139418 0.0130385  1.000000  0.884687\nFTH1     0.000000  0.645503  0.645503  0.645503 0.6455026  0.645503  0.394867\nMT-ND4L  0.925926  0.895895  0.886703  0.712136 0.6168430  0.875772  0.775249\n           AUC.32     AUC.33    AUC.34    AUC.35    AUC.36    AUC.37    AUC.38\n        &lt;numeric&gt;  &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;\nMT-CO2   1.000000 0.00138574  1.000000  0.945587  0.982383  1.000000  0.000000\nTMSB4X   0.911376 0.82457798  0.768674  0.451058  0.789502  0.854415  0.911376\nMT-CYB   1.000000 1.00000000  1.000000  0.121392  1.000000  0.000000  1.000000\nFTH1     0.645503 0.64550265  0.645503  0.645503  0.645503  0.645503  0.645503\nMT-ND4L  0.854701 0.83774250  0.900560  0.447932  0.837602  0.868056  0.925926\n\n# To visualize marker genes, one common approach is a heatmap of top markers across clusters.\n# For simplicity, let's select the top 3 markers for each cluster and plot their expression.\n\n# Get top markers for each cluster\ntop_markers_list &lt;- lapply(names(markers), function(cl_id) {\n  current_markers &lt;- markers[[cl_id]]\n  \n  if (nrow(current_markers) &gt; 0) {\n    current_markers &lt;- current_markers[order(current_markers$FDR,\n                                             -current_markers$summary.AUC), ]\n    head(rownames(current_markers), 3)\n  } else {\n    NULL\n  }\n})\n\n# Flatten the list and remove NULLs\ntop_markers &lt;- unique(unlist(top_markers_list))\n\n# Ensure we have some markers to plot\nif (length(top_markers) &gt; 0) {\n  # Get expression for these top markers\n  marker_expr &lt;- logcounts(spe)[top_markers, ]\n\n  # Order spots by cluster for better visualization\n  spot_order &lt;- order(colData(spe)$clusters)\n  marker_expr_ordered &lt;- marker_expr[, spot_order]\n  cluster_labels_ordered &lt;- colData(spe)$clusters[spot_order]\n\n  # Create annotation for heatmap\n  annotation_col &lt;- data.frame(Cluster = cluster_labels_ordered)\n  rownames(annotation_col) &lt;- colnames(marker_expr_ordered)\n\n  # Plot heatmap\n  pheatmap(marker_expr_ordered,\n    cluster_rows = FALSE,\n    cluster_cols = FALSE,\n    show_colnames = FALSE,\n    annotation_col = annotation_col,\n    main = \"Top Marker Gene Expression per Cluster\"\n  )\n} else {\n  message(\"No marker genes found to plot.\")\n}"
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#question-5",
    "href": "day1/day1-3_feature_dimred_cluster.html#question-5",
    "title": "Exercise 3",
    "section": "Question 5",
    "text": "Question 5\nHow can identifying marker genes help in the biological interpretation of the discovered spatial clusters?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nIdentifying marker genes is crucial for biological interpretation because:\n\n\nAssigning Identity: Marker genes can be used to assign biological identities (e.g., cell types, tissue regions) to the computationally derived clusters by comparing them to known gene expression signatures.\n\nUnderstanding Function: The functions of marker genes can provide insights into the biological processes or pathways active within each cluster.\n\nValidation: Marker genes can be used to validate the clustering results against existing biological knowledge or independent experiments.\n\nFurther Research: They can serve as starting points for further investigation into the unique characteristics and roles of each spatial domain."
  },
  {
    "objectID": "day1/day1-3_feature_dimred_cluster.html#visualization-of-results",
    "href": "day1/day1-3_feature_dimred_cluster.html#visualization-of-results",
    "title": "Exercise 3",
    "section": "Visualization of Results",
    "text": "Visualization of Results\nVisualizing the dimensionality reduction and clustering results is crucial for interpreting the biological insights from your spatial transcriptomics data.\n\n# Visualize clusters on the UMAP embedding.\n# This helps to see how well distinct clusters are separated in the reduced dimension space.\nplotUMAP(spe, colour_by = \"clusters\") +\n  ggtitle(\"UMAP colored by Clusters\")\n\n\n\n\n\n\n# Visualize clusters in the spatial context.\n# This allows us to see the spatial distribution of the identified clusters.\n# We use escheR for enhanced spatial plotting.\nescheR::make_escheR(spe) |&gt;\n  escheR::add_fill(var = \"clusters\", point_size = 1.5) +\n  ggtitle(\"Spatial Clusters\")\n\n\n\n\n\n\n\nClustering Heatmap\nA heatmap of gene expression across the identified clusters can help to visualize the distinct transcriptional profiles that define each cluster. We will plot the expression of the top highly variable genes (HVGs) across the clusters.\n\n# Calculate average expression of HVGs per cluster.\n# First, get the expression matrix for HVGs.\nhvg_expr &lt;- logcounts(spe)[rowData(spe)$hvg, ]\n\n# Aggregate expression by cluster.\n# We need to ensure that the cluster labels are correctly aligned with the columns of hvg_expr.\ncluster_avg_expr &lt;- aggregate(t(hvg_expr), by = list(cluster = colData(spe)$clusters), FUN = mean)\n\n# Convert to a matrix and set row names to cluster IDs.\nrownames(cluster_avg_expr) &lt;- cluster_avg_expr$cluster\ncluster_avg_expr &lt;- as.matrix(cluster_avg_expr[, -1])\n\n# Transpose the matrix so genes are rows and clusters are columns for pheatmap.\ncluster_avg_expr &lt;- t(cluster_avg_expr)\n\n# Scale the rows (genes) for better visualization in the heatmap.\ncluster_avg_expr_scaled &lt;- t(scale(t(cluster_avg_expr)))\n\n# Plot the heatmap.\npheatmap(cluster_avg_expr_scaled,\n  cluster_rows = TRUE,\n  cluster_cols = TRUE,\n  show_rownames = FALSE, # Don't show all gene names if there are many\n  main = \"Average HVG Expression per Cluster\"\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nKey Takeaways:\n\nFeature selection (HVGs) reduces noise and improves computational efficiency.\nPCA provides a linear view of major variance, while UMAP and t-SNE offer a non-linear, often more visually distinct, representations.\nGraph-based clustering helps identify groups of spots with similar gene expression.\nIdentifying marker genes helps in the biological interpretation and annotation of clusters.\nVisualizing clusters in both reduced dimension space and spatial context is essential for biological interpretation."
  },
  {
    "objectID": "qmd/about.html",
    "href": "qmd/about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "qmd/precourse_preparations.html",
    "href": "qmd/precourse_preparations.html",
    "title": "Precourse preparations",
    "section": "",
    "text": "You should meet the learning outcomes of:\n\nIntroduction to bulk RNA-Seq: From Quality Control to Pathway Analysis\nIntroduction to Sequencing Data Analysis\nFirst Steps with R in Life Sciences\nSingle-Cell Transcriptomics with R\n\nIn summary, participants must already have a basic knowledge in: - Next Generation Sequencing (NGS) techniques - Analyzing gene expression data - Dimensionality reduction (PCA, UMAP) - Graph-based clustering - R (evaluate your R skills here) - UNIX (self-assess your skills with the e-learning course UNIX Fundamentals, and this quiz)\n\n\n\nAttendees should have a Wi-Fi enabled computer. An online R and RStudio environment will be provided. In order to access that environment your computer needs to be able to access http websites (not https). You can check this by browsing to http://www.httpforever.com. However, in case you wish to perform the practical exercises on your own computer, please take a moment to install the following before the course:\n\nR version &gt; 4.5.\nLatest RStudio version, the free version is perfectly fine.\nThe R packages necessary for the course. Find the renv to install them here."
  },
  {
    "objectID": "qmd/precourse_preparations.html#required-competences",
    "href": "qmd/precourse_preparations.html#required-competences",
    "title": "Precourse preparations",
    "section": "",
    "text": "You should meet the learning outcomes of:\n\nIntroduction to bulk RNA-Seq: From Quality Control to Pathway Analysis\nIntroduction to Sequencing Data Analysis\nFirst Steps with R in Life Sciences\nSingle-Cell Transcriptomics with R\n\nIn summary, participants must already have a basic knowledge in: - Next Generation Sequencing (NGS) techniques - Analyzing gene expression data - Dimensionality reduction (PCA, UMAP) - Graph-based clustering - R (evaluate your R skills here) - UNIX (self-assess your skills with the e-learning course UNIX Fundamentals, and this quiz)\n\n\n\nAttendees should have a Wi-Fi enabled computer. An online R and RStudio environment will be provided. In order to access that environment your computer needs to be able to access http websites (not https). You can check this by browsing to http://www.httpforever.com. However, in case you wish to perform the practical exercises on your own computer, please take a moment to install the following before the course:\n\nR version &gt; 4.5.\nLatest RStudio version, the free version is perfectly fine.\nThe R packages necessary for the course. Find the renv to install them here."
  }
]